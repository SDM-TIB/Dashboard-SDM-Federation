
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ASC ASK BOOLEAN BOUND BY BYTE COLON COMA CONSTANT CONTAINS DATATYPE DATETIME DECIMAL DECIMALCONST DESC DISTINCT DIV DOUBLE DOUBLECONST EQUALS FILTER FLOAT GREATER GREATEREQ ID INT INTEGER ISBLANK ISIRI ISLITERAL ISURI LANG LANGMATCHES LCASE LESS LESSEQ LIMIT LKEY LONG LPAR MINUS NEG NEGATIVEINT NEQUALS NONNEGINT NONPOSINT NUMBER OFFSET OPTIONAL OR ORDER PLUS POINT POSITIVEINT PREFIX REGEX RKEY RPAR SAMETERM SELECT SHORT STR STRING TIMES UCASE UNION UNSIGNEDBYTE UNSIGNEDINT UNSIGNEDLONG UNSIGNEDSHORT UPPERCASE URI VARIABLE WHERE\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    \n    object : DOUBLECONST\n    \n    object : DECIMALCONST\n    \n    object : NUMBER\n    '
    
_lr_action_items = {'CONSTANT':([7,22,23,35,81,83,85,92,96,106,107,108,109,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,225,226,247,],[-9,-7,-8,57,57,57,57,-77,-76,-126,-127,-128,160,57,57,57,57,57,57,-83,-82,-74,-80,-75,57,-72,-85,-81,57,-84,-73,-79,-78,57,57,57,241,57,241,]),'FLOAT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,58,58,-12,58,58,58,-77,-76,-15,-13,58,58,58,58,58,58,-83,-82,-74,-80,-75,58,-72,-85,-81,58,-84,-73,58,-79,-78,58,58,58,58,-14,-17,-16,]),'LCASE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,65,65,-12,65,65,65,-77,-76,-15,-13,65,65,65,65,65,65,-83,-82,-74,-80,-75,65,-72,-85,-81,65,-84,-73,65,-79,-78,65,65,65,65,-14,-17,-16,]),'DISTINCT':([11,],[19,]),'$end':([2,9,14,16,25,27,28,49,50,51,52,53,54,105,129,130,133,236,237,238,239,240,],[0,-5,-11,-5,-5,-19,-5,-21,-1,-20,-2,-19,-18,-25,-15,-10,-24,-22,-23,-14,-17,-16,]),'ISLITERAL':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,61,61,-12,61,61,61,-77,-76,-15,-13,61,61,61,61,61,61,-83,-82,-74,-80,-75,61,-72,-85,-81,61,-84,-73,61,-79,-78,61,61,61,61,-14,-17,-16,]),'EQUALS':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,151,151,151,-61,151,151,151,-70,151,-7,151,151,-67,151,151,-62,-63,-66,-64,]),'BOUND':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,59,59,-12,59,59,59,-77,-76,-15,-13,59,59,59,59,59,59,-83,-82,-74,-80,-75,59,-72,-85,-81,59,-84,-73,59,-79,-78,59,59,59,59,-14,-17,-16,]),'DIV':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,152,152,152,-61,152,152,152,-70,152,-7,152,152,-67,152,152,-62,-63,-66,-64,]),'STRING':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,62,62,-12,62,62,62,-77,-76,-15,-13,62,62,62,62,62,62,-83,-82,-74,-80,-75,62,-72,-85,-81,62,-84,-73,62,-79,-78,62,62,62,62,-14,-17,-16,]),'ISURI':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,82,82,-12,82,82,82,-77,-76,-15,-13,82,82,82,82,82,82,-83,-82,-74,-80,-75,82,-72,-85,-81,82,-84,-73,82,-79,-78,82,82,82,82,-14,-17,-16,]),'URI':([3,7,13,18,22,23,24,30,31,32,33,35,38,39,40,41,42,43,47,48,56,57,63,80,81,83,85,88,92,96,100,101,106,107,108,109,110,111,113,115,116,117,118,119,120,121,122,129,130,136,137,138,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,184,186,187,188,192,194,195,196,197,198,201,202,203,204,205,206,207,208,209,211,213,214,215,216,217,224,226,230,231,233,235,238,239,240,244,245,248,249,250,251,253,],[7,-9,23,7,-7,-8,-5,7,-33,-34,-130,7,-129,7,7,-5,-44,7,7,-12,7,-59,-60,-58,7,7,7,-46,-77,-76,-57,-53,-126,-127,-128,7,-33,7,7,-35,7,7,-39,-38,7,7,7,-15,-13,7,7,7,7,7,-56,7,-68,23,-83,-82,-74,-80,-75,7,-72,-85,-81,7,-84,-73,-133,-125,-131,-134,-136,-135,-132,-32,-33,7,7,7,7,7,7,-5,7,7,-41,7,7,7,23,-47,-61,-45,-79,-54,-78,7,-70,7,-7,-69,7,-52,-53,-32,-37,-5,7,7,-43,-40,-48,-33,-67,7,-55,-71,-43,7,-14,-17,-16,-42,-5,-62,-63,-66,-36,-64,]),'RPAR':([7,23,57,63,80,100,101,129,139,141,142,144,146,188,189,193,195,198,199,200,202,203,205,206,220,221,222,224,227,228,229,230,231,232,238,239,240,241,242,243,248,249,250,252,253,],[-9,-8,-59,-60,-58,-57,-53,-15,192,195,198,-56,-68,-61,224,227,-54,-70,230,198,-7,-69,-52,-53,238,239,240,-67,-51,-49,-50,-55,-71,195,-14,-17,-16,-65,249,250,-62,-63,-66,253,-64,]),'NEQUALS':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,155,155,155,-61,155,155,155,-70,155,-7,155,155,-67,155,155,-62,-63,-66,-64,]),'RKEY':([7,18,22,23,30,31,32,36,37,40,41,42,43,55,56,57,63,80,88,100,101,110,111,112,113,115,116,118,119,122,134,144,146,160,161,162,163,164,165,166,167,168,169,170,171,174,175,176,177,178,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,219,224,230,231,233,234,244,245,246,248,249,250,251,253,],[-9,-5,-7,-8,-5,-33,-34,-28,105,-5,-5,-44,-5,133,-5,-59,-60,-58,-46,-57,-53,167,-5,171,-5,-35,-5,-39,-38,-5,187,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,207,-5,-5,-5,-5,-30,-5,-5,216,-5,-41,-5,-5,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,-5,-5,-5,-29,-43,-40,-48,216,236,237,-67,-55,-71,244,245,-42,-5,216,-62,-63,-66,-36,-64,]),'NUMBER':([7,22,23,26,29,35,81,83,85,92,96,106,107,108,109,135,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,226,],[-9,-7,-8,51,54,63,63,63,63,-77,-76,-126,-127,-128,164,188,63,63,63,63,63,63,-83,-82,-74,-80,-75,63,-72,-85,-81,63,-84,-73,-79,-78,63,63,63,63,]),'OFFSET':([9,14,16,25,27,54,105,129,130,133,236,237,238,239,240,],[-5,-11,26,26,-19,-18,-25,-15,-10,-24,-22,-23,-14,-17,-16,]),'GREATEREQ':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,158,158,158,-61,158,158,158,-70,158,-7,158,158,-67,158,158,-62,-63,-66,-64,]),'ASK':([0,1,4,5,7,8,12,22,23,],[-5,-4,10,-5,-9,-6,-3,-7,-8,]),'DESC':([24,47,48,129,130,184,238,239,240,],[-5,126,-12,-15,-13,126,-14,-17,-16,]),'SELECT':([0,1,4,5,7,8,12,22,23,],[-5,-4,11,-5,-9,-6,-3,-7,-8,]),'POSITIVEINT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,76,76,-12,76,76,76,-77,-76,-15,-13,76,76,76,76,76,76,-83,-82,-74,-80,-75,76,-72,-85,-81,76,-84,-73,76,-79,-78,76,76,76,76,-14,-17,-16,]),'LANGMATCHES':([35,81,83,85,92,96,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,226,],[86,86,86,86,-77,-76,86,86,86,86,86,86,-83,-82,-74,-80,-75,86,-72,-85,-81,86,-84,-73,-79,-78,86,86,86,86,]),'UNSIGNEDSHORT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,84,84,-12,84,84,84,-77,-76,-15,-13,84,84,84,84,84,84,-83,-82,-74,-80,-75,84,-72,-85,-81,84,-84,-73,84,-79,-78,84,84,84,84,-14,-17,-16,]),'WHERE':([10,44,45,46,124,],[17,123,-124,125,-123,]),'INTEGER':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,68,68,-12,68,68,68,-77,-76,-15,-13,68,68,68,68,68,68,-83,-82,-74,-80,-75,68,-72,-85,-81,68,-84,-73,68,-79,-78,68,68,68,68,-14,-17,-16,]),'LANG':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,69,69,-12,69,69,69,-77,-76,-15,-13,69,69,69,69,69,69,-83,-82,-74,-80,-75,69,-72,-85,-81,69,-84,-73,69,-79,-78,69,69,69,69,-14,-17,-16,]),'LONG':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,70,70,-12,70,70,70,-77,-76,-15,-13,70,70,70,70,70,70,-83,-82,-74,-80,-75,70,-72,-85,-81,70,-84,-73,70,-79,-78,70,70,70,70,-14,-17,-16,]),'COMA':([7,23,57,63,80,100,146,188,190,191,198,202,203,224,231,241,242,248,249,250,253,],[-9,-8,-59,-60,-58,-57,-68,-61,225,226,-70,-7,-69,-67,-71,-65,247,-62,-63,-66,-64,]),'BY':([15,],[24,]),'INT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,102,102,-12,102,102,102,-77,-76,-15,-13,102,102,102,102,102,102,-83,-82,-74,-80,-75,102,-72,-85,-81,102,-84,-73,102,-79,-78,102,102,102,102,-14,-17,-16,]),'REGEX':([35,81,83,85,92,96,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,226,],[72,72,72,72,-77,-76,72,72,72,72,72,72,-83,-82,-74,-80,-75,72,-72,-85,-81,72,-84,-73,-79,-78,72,72,72,72,]),'DECIMAL':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,103,103,-12,103,103,103,-77,-76,-15,-13,103,103,103,103,103,103,-83,-82,-74,-80,-75,103,-72,-85,-81,103,-84,-73,103,-79,-78,103,103,103,103,-14,-17,-16,]),'NONPOSINT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,74,74,-12,74,74,74,-77,-76,-15,-13,74,74,74,74,74,74,-83,-82,-74,-80,-75,74,-72,-85,-81,74,-84,-73,74,-79,-78,74,74,74,74,-14,-17,-16,]),'LIMIT':([9,14,16,27,28,51,105,129,130,133,236,237,238,239,240,],[-5,-11,29,-21,29,-20,-25,-15,-10,-24,-22,-23,-14,-17,-16,]),'CONTAINS':([35,81,83,85,92,96,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,226,],[75,75,75,75,-77,-76,75,75,75,75,75,75,-83,-82,-74,-80,-75,75,-72,-85,-81,75,-84,-73,-79,-78,75,75,75,75,]),'ISIRI':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,66,66,-12,66,66,66,-77,-76,-15,-13,66,66,66,66,66,66,-83,-82,-74,-80,-75,66,-72,-85,-81,66,-84,-73,66,-79,-78,66,66,66,66,-14,-17,-16,]),'SHORT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,77,77,-12,77,77,77,-77,-76,-15,-13,77,77,77,77,77,77,-83,-82,-74,-80,-75,77,-72,-85,-81,77,-84,-73,77,-79,-78,77,77,77,77,-14,-17,-16,]),'BOOLEAN':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,78,78,-12,78,78,78,-77,-76,-15,-13,78,78,78,78,78,78,-83,-82,-74,-80,-75,78,-72,-85,-81,78,-84,-73,78,-79,-78,78,78,78,78,-14,-17,-16,]),'NEG':([35,81,83,140,143,148,149,151,155,156,157,158,194,196,197,204,],[83,83,83,83,83,-83,-82,-80,-85,-81,83,-84,-79,-78,83,83,]),'VARIABLE':([7,11,18,19,20,21,22,23,24,30,31,32,33,35,38,39,40,41,42,43,44,45,47,48,56,57,63,80,81,83,85,88,92,96,100,101,106,107,108,109,110,111,113,115,116,117,118,119,120,121,122,124,129,130,136,137,138,140,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,183,184,185,187,188,192,194,195,196,197,198,201,202,203,204,205,206,207,208,209,211,213,214,215,216,217,224,226,230,231,233,235,238,239,240,244,245,248,249,250,251,253,],[-9,-5,33,-26,-27,45,-7,-8,-5,33,-33,-34,-130,80,-129,108,33,-5,-44,33,124,-124,129,-12,33,-59,-60,-58,80,80,80,-46,-77,-76,-57,-53,-126,-127,-128,166,-33,33,33,-35,33,33,-39,-38,33,33,33,-123,-15,-13,80,80,80,80,80,-56,80,-68,-83,-82,-74,-80,-75,80,-72,-85,-81,80,-84,-73,-133,-125,-131,-134,-136,-135,-132,-32,-33,33,33,33,33,33,33,-5,33,33,-41,33,33,220,129,222,-47,-61,-45,-79,-54,-78,80,-70,80,-7,-69,80,-52,-53,-32,-37,-5,33,33,-43,-40,-48,-33,-67,80,-55,-71,-43,33,-14,-17,-16,-42,-5,-62,-63,-66,-36,-64,]),'LPAR':([7,23,35,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,90,91,92,93,95,96,97,98,99,100,102,103,104,126,127,128,132,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,202,204,223,226,],[-9,-8,81,-89,-103,-91,-115,-95,-104,-112,-122,-92,136,-101,-96,-109,-97,137,138,-107,-90,-118,-111,-105,-108,140,-93,143,-116,145,-88,-106,-98,-99,-117,-77,-113,-87,-76,-94,-114,-121,-120,-110,-102,-100,183,184,185,-120,145,145,145,140,140,145,-83,-82,-74,-80,-75,145,-72,-85,-81,204,-84,-73,-79,-78,140,145,-7,204,-7,145,]),'NEGATIVEINT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,79,79,-12,79,79,79,-77,-76,-15,-13,79,79,79,79,79,79,-83,-82,-74,-80,-75,79,-72,-85,-81,79,-84,-73,79,-79,-78,79,79,79,79,-14,-17,-16,]),'GREATER':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,148,148,148,-61,148,148,148,-70,148,-7,148,148,-67,148,148,-62,-63,-66,-64,]),'ORDER':([9,105,133,236,237,],[15,-25,-24,-22,-23,]),'BYTE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,64,64,-12,64,64,64,-77,-76,-15,-13,64,64,64,64,64,64,-83,-82,-74,-80,-75,64,-72,-85,-81,64,-84,-73,64,-79,-78,64,64,64,64,-14,-17,-16,]),'TIMES':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,150,150,150,-61,150,150,150,-70,150,-7,150,150,-67,150,150,-62,-63,-66,-64,]),'AND':([7,23,57,63,80,100,101,141,142,144,146,188,195,198,202,203,205,206,224,229,230,231,248,249,250,253,],[-9,-8,-59,-60,-58,-57,-53,196,-53,-56,-68,-61,-54,-70,-7,-69,-52,-53,-67,196,-55,-71,-62,-63,-66,-64,]),'PREFIX':([0,5,7,8,22,23,],[3,3,-9,-6,-7,-8,]),'DATETIME':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,87,87,-12,87,87,87,-77,-76,-15,-13,87,87,87,87,87,87,-83,-82,-74,-80,-75,87,-72,-85,-81,87,-84,-73,87,-79,-78,87,87,87,87,-14,-17,-16,]),'ALL':([11,19,20,21,],[-5,-26,-27,46,]),'DOUBLECONST':([7,22,23,106,107,108,109,],[-9,-7,-8,-126,-127,-128,163,]),'COLON':([6,94,106,131,],[13,147,13,186,]),'DECIMALCONST':([7,22,23,106,107,108,109,],[-9,-7,-8,-126,-127,-128,165,]),'UPPERCASE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,90,90,-12,90,90,90,-77,-76,-15,-13,90,90,90,90,90,90,-83,-82,-74,-80,-75,90,-72,-85,-81,90,-84,-73,90,-79,-78,90,90,90,90,-14,-17,-16,]),'UNSIGNEDBYTE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,91,91,-12,91,91,91,-77,-76,-15,-13,91,91,91,91,91,91,-83,-82,-74,-80,-75,91,-72,-85,-81,91,-84,-73,91,-79,-78,91,91,91,91,-14,-17,-16,]),'OPTIONAL':([7,18,22,23,30,31,32,40,41,42,43,56,57,63,80,88,100,101,110,111,113,115,116,117,118,119,120,121,122,144,146,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,211,213,214,215,216,217,224,230,231,233,235,244,245,248,249,250,251,253,],[-9,34,-7,-8,34,-33,-34,34,-5,-44,34,34,-59,-60,-58,-46,-57,-53,-33,34,34,-35,34,34,-39,-38,34,34,34,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,-33,34,34,34,34,34,34,-5,34,34,-41,34,34,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,-5,34,34,-43,-40,-48,-33,-67,-55,-71,-43,34,-42,-5,-62,-63,-66,-36,-64,]),'ASC':([24,47,48,129,130,184,238,239,240,],[-5,128,-12,-15,-13,128,-14,-17,-16,]),'OR':([7,23,57,63,80,100,101,141,142,144,146,188,195,198,202,203,205,206,224,229,230,231,248,249,250,253,],[-9,-8,-59,-60,-58,-57,-53,194,-53,-56,-68,-61,-54,-70,-7,-69,-52,-53,-67,194,-55,-71,-62,-63,-66,-64,]),'NONNEGINT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,93,93,-12,93,93,93,-77,-76,-15,-13,93,93,93,93,93,93,-83,-82,-74,-80,-75,93,-72,-85,-81,93,-84,-73,93,-79,-78,93,93,93,93,-14,-17,-16,]),'ID':([3,7,13,18,22,23,24,30,31,32,33,35,38,39,40,41,42,43,47,48,56,57,63,80,81,83,85,88,92,96,100,101,106,107,108,109,110,111,113,115,116,117,118,119,120,121,122,129,130,136,137,138,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,184,186,187,188,192,194,195,196,197,198,201,202,203,204,205,206,207,208,209,211,213,214,215,216,217,224,226,230,231,233,235,238,239,240,244,245,248,249,250,251,253,],[6,-9,22,6,-7,-8,-5,6,-33,-34,-130,94,-129,106,6,-5,-44,6,131,-12,6,-59,-60,-58,94,94,94,-46,-77,-76,-57,-53,-126,-127,-128,6,-33,6,6,-35,6,6,-39,-38,6,6,6,-15,-13,94,94,94,94,94,-56,94,-68,202,-83,-82,-74,-80,-75,94,-72,-85,-81,94,-84,-73,-133,-125,-131,-134,-136,-135,-132,-32,-33,6,6,6,6,6,6,-5,6,6,-41,6,6,131,223,-47,-61,-45,-79,-54,-78,94,-70,94,-7,-69,94,-52,-53,-32,-37,-5,6,6,-43,-40,-48,-33,-67,94,-55,-71,-43,6,-14,-17,-16,-42,-5,-62,-63,-66,-36,-64,]),'UNION':([7,18,22,23,30,31,32,40,41,42,43,56,57,63,80,88,100,101,110,111,113,115,118,119,122,144,146,160,161,162,163,164,165,166,167,168,169,170,171,176,177,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,210,211,214,215,216,217,224,230,231,233,244,245,246,248,249,250,251,253,],[-9,-5,-7,-8,-5,-33,-34,-5,114,-44,117,-5,-59,-60,-58,-46,-57,-53,-33,-5,172,-35,-39,-38,117,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,-33,-5,172,-5,213,117,-5,-41,-5,-5,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,213,114,-5,-43,-40,-48,-33,-67,-55,-71,-43,-42,114,114,-62,-63,-66,-36,-64,]),'LESSEQ':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,149,149,149,-61,149,149,149,-70,149,-7,149,149,-67,149,149,-62,-63,-66,-64,]),'FILTER':([7,18,22,23,30,31,32,40,41,42,43,56,57,63,80,88,100,101,110,111,113,115,116,117,118,119,120,121,122,144,146,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,211,213,214,215,216,217,224,230,231,233,235,244,245,248,249,250,251,253,],[-9,35,-7,-8,35,-33,-34,35,-5,-44,35,35,-59,-60,-58,-46,-57,-53,-33,35,35,-35,35,35,-39,-38,35,35,35,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,-33,35,35,35,35,35,35,-5,35,35,-41,35,35,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,-5,35,35,-43,-40,-48,-33,-67,-55,-71,-43,35,-42,-5,-62,-63,-66,-36,-64,]),'SAMETERM':([35,81,83,85,92,96,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,194,196,197,201,204,226,],[95,95,95,95,-77,-76,95,95,95,95,95,95,-83,-82,-74,-80,-75,95,-72,-85,-81,95,-84,-73,-79,-78,95,95,95,95,]),'UNSIGNEDINT':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,60,60,-12,60,60,60,-77,-76,-15,-13,60,60,60,60,60,60,-83,-82,-74,-80,-75,60,-72,-85,-81,60,-84,-73,60,-79,-78,60,60,60,60,-14,-17,-16,]),'DATATYPE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,71,71,-12,71,71,71,-77,-76,-15,-13,71,71,71,71,71,71,-83,-82,-74,-80,-75,71,-72,-85,-81,71,-84,-73,71,-79,-78,71,71,71,71,-14,-17,-16,]),'PLUS':([7,23,35,57,63,80,81,83,85,92,96,100,101,136,137,138,140,142,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,188,189,190,191,194,196,197,198,200,201,202,203,204,206,224,226,231,243,248,249,250,253,],[-9,-8,96,-59,-60,-58,96,96,96,-77,-76,-57,154,96,96,96,96,154,96,96,154,-83,-82,-74,-80,-75,96,-72,-85,-81,96,-84,-73,-61,154,154,154,-79,-78,96,-70,154,96,-7,154,96,154,-67,96,154,154,-62,-63,-66,-64,]),'ISBLANK':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,97,97,-12,97,97,97,-77,-76,-15,-13,97,97,97,97,97,97,-83,-82,-74,-80,-75,97,-72,-85,-81,97,-84,-73,97,-79,-78,97,97,97,97,-14,-17,-16,]),'UCASE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,99,99,-12,99,99,99,-77,-76,-15,-13,99,99,99,99,99,99,-83,-82,-74,-80,-75,99,-72,-85,-81,99,-84,-73,99,-79,-78,99,99,99,99,-14,-17,-16,]),'LESS':([7,23,57,63,80,100,101,142,146,188,189,190,191,198,200,202,203,206,224,231,243,248,249,250,253,],[-9,-8,-59,-60,-58,-57,156,156,156,-61,156,156,156,-70,156,-7,156,156,-67,156,156,-62,-63,-66,-64,]),'POINT':([7,18,22,23,30,31,32,40,41,42,43,56,57,63,80,88,100,101,110,111,113,115,116,118,119,122,144,146,160,161,162,163,164,165,166,167,168,169,170,171,176,177,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,211,214,215,216,217,224,230,231,233,244,245,248,249,250,251,253,],[-9,-5,-7,-8,-5,-33,-34,-5,-5,-44,120,-5,-59,135,-58,-46,-57,-53,-33,-5,120,-35,174,-39,-38,120,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,-33,-5,120,120,-5,120,-5,-41,-5,-5,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,-5,-5,-43,-40,-48,-33,-67,-55,-71,-43,-42,-5,-62,-63,-66,-36,-64,]),'LKEY':([7,10,17,18,22,23,30,31,32,34,40,41,42,43,56,57,63,80,88,100,101,110,111,113,114,115,116,117,118,119,120,121,122,123,125,144,146,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,179,180,181,182,187,188,192,195,198,202,203,205,206,207,208,209,211,213,214,215,216,217,224,230,231,233,235,244,245,248,249,250,251,253,],[-9,18,30,40,-7,-8,40,-33,-34,56,111,-5,-44,121,40,-59,-60,-58,-46,-57,-53,-33,169,121,173,-35,40,121,-39,-38,121,179,121,181,182,-56,-68,-133,-125,-131,-134,-136,-135,-132,-32,-33,169,121,121,121,211,40,-5,121,169,-41,40,40,-47,-61,-45,-54,-70,-7,-69,-52,-53,-32,-37,-5,169,235,-43,-40,-48,-33,-67,-55,-71,-43,211,-42,-5,-62,-63,-66,-36,-64,]),'MINUS':([7,23,35,57,63,80,81,83,85,92,96,100,101,136,137,138,140,142,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,188,189,190,191,194,196,197,198,200,201,202,203,204,206,224,226,231,243,248,249,250,253,],[-9,-8,92,-59,-60,-58,92,92,92,-77,-76,-57,159,92,92,92,92,159,92,92,159,-83,-82,-74,-80,-75,92,-72,-85,-81,92,-84,-73,-61,159,159,159,-79,-78,92,-70,159,92,-7,159,92,159,-67,92,159,159,-62,-63,-66,-64,]),'STR':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,89,89,-12,89,89,89,-77,-76,-15,-13,89,89,89,89,89,89,-83,-82,-74,-80,-75,89,-72,-85,-81,89,-84,-73,89,-79,-78,89,89,89,89,-14,-17,-16,]),'UNSIGNEDLONG':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,98,98,-12,98,98,98,-77,-76,-15,-13,98,98,98,98,98,98,-83,-82,-74,-80,-75,98,-72,-85,-81,98,-84,-73,98,-79,-78,98,98,98,98,-14,-17,-16,]),'DOUBLE':([24,35,47,48,81,83,85,92,96,129,130,136,137,138,140,143,145,148,149,150,151,152,153,154,155,156,157,158,159,184,194,196,197,201,204,226,238,239,240,],[-5,104,104,-12,104,104,104,-77,-76,-15,-13,104,104,104,104,104,104,-83,-82,-74,-80,-75,104,-72,-85,-81,104,-84,-73,104,-79,-78,104,104,104,104,-14,-17,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'object':([109,],[161,]),'UNARYOP':([35,81,83,85,136,137,138,140,143,145,153,157,197,201,204,226,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'order_by':([9,],[16,]),'join_block':([18,30,40,56,111,116,121,169,173,174,179,181,182,211,235,],[31,31,110,31,168,31,178,168,210,31,217,31,31,217,246,]),'query':([4,],[9,]),'ARITOP':([101,142,146,189,190,191,200,203,206,231,243,],[153,153,153,153,153,153,153,153,153,153,153,]),'LOGOP':([141,229,],[197,197,]),'desc_var':([47,184,],[130,221,]),'express_rel':([35,81,83,140,143,157,197,204,],[88,141,144,141,141,205,229,232,]),'empty':([0,5,9,11,16,18,24,25,28,30,40,41,43,56,111,113,116,122,169,170,171,174,176,177,179,181,182,209,210,211,245,246,],[1,1,14,20,27,32,48,49,53,32,32,115,118,32,32,118,32,118,32,118,118,32,115,118,32,32,32,115,115,32,115,115,]),'var_list':([21,],[44,]),'var_order_list':([24,],[47,]),'RELOP':([101,142,146,189,190,191,200,203,206,231,243,],[157,157,201,201,201,201,201,201,157,201,201,]),'prefix_list':([0,5,],[4,12,]),'regex_flag':([242,],[248,]),'unary_func':([35,47,81,83,85,136,137,138,140,143,145,153,157,184,197,201,204,226,],[67,127,67,67,67,67,67,67,67,67,67,67,67,127,67,67,67,67,]),'prefix':([0,5,],[5,5,]),'expression':([81,140,143,197,],[139,193,199,228,]),'parse_sparql':([0,],[2,]),'offset':([16,25,],[28,50,]),'rest_join_block':([43,113,122,170,171,177,],[119,119,180,119,208,215,]),'binary_func':([35,81,83,85,136,137,138,140,143,145,153,157,197,201,204,226,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'union_block':([18,30,40,56,111,169,179,181,182,211,],[36,36,112,36,112,112,112,36,36,112,]),'distinct':([11,],[21,]),'group_graph_pattern':([18,30,56,181,182,],[37,55,134,218,219,]),'pattern_arg':([225,247,],[242,252,]),'uri':([3,18,30,35,39,40,43,47,56,81,83,85,109,111,113,116,117,120,121,122,136,137,138,140,143,145,153,157,169,170,171,172,173,174,177,179,181,182,184,197,201,204,211,213,226,235,],[8,38,38,100,107,38,38,132,38,100,100,100,162,38,38,38,38,38,38,38,100,100,100,100,100,100,100,100,38,38,38,38,38,38,38,38,38,38,132,100,100,100,38,38,100,38,]),'subject':([18,30,40,43,56,111,113,116,117,120,121,122,169,170,171,172,173,174,177,179,181,182,211,213,235,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'limit':([16,28,],[25,52,]),'express_arg':([35,81,83,85,136,137,138,140,143,145,153,157,197,201,204,226,],[101,142,101,146,189,190,191,142,142,200,203,206,101,231,142,243,]),'rest_union_block':([41,176,209,210,245,246,],[116,214,233,234,251,234,]),'pjoin_block':([18,30,40,56,111,116,169,174,179,181,182,211,],[41,41,41,41,41,175,41,212,41,41,41,41,]),'triple':([18,30,40,43,56,111,113,116,117,120,121,122,169,170,171,172,173,174,177,179,181,182,211,213,235,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'predicate':([39,],[109,]),'bgp':([18,30,40,43,56,111,113,116,117,120,121,122,169,170,171,172,173,174,177,179,181,182,211,213,235,],[43,43,113,122,43,170,122,43,176,177,170,122,170,122,122,209,43,43,122,170,43,43,170,176,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','queryParser.py',181),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','queryParser.py',189),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',197),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',204),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',211),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',218),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',225),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',232),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',239),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',246),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',253),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',260),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',267),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',274),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',281),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',288),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',295),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',302),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',309),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',316),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',323),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',330),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',337),
  ('query -> ASK WHERE LKEY group_graph_pattern RKEY','query',5,'p_query_2','queryParser.py',344),
  ('query -> ASK LKEY group_graph_pattern RKEY','query',4,'p_query_3','queryParser.py',351),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',358),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',365),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',372),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',379),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',388),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',400),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',407),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',414),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',421),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',428),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',435),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',442),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',454),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',461),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',468),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',475),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',482),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',490),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',498),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',505),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',512),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',519),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',533),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',543),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',550),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',557),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',564),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',571),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',578),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',585),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',592),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',599),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',606),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',613),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',625),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',632),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',640),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',647),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',654),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',661),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',668),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',675),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',682),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',689),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',696),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',703),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',710),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',717),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',724),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',731),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',738),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',745),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',752),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',759),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',766),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',773),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',780),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',787),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',794),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',801),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',808),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',815),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',822),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',829),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',836),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',843),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',850),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',857),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',864),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',871),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',878),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',885),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',892),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',899),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',906),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',907),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',908),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',909),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',910),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',911),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',912),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',913),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',914),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',915),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',916),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',917),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',918),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',919),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',920),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',921),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',922),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',923),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',924),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',931),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',938),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',945),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',952),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',959),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',966),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',973),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',980),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',993),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',1000),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',1007),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',1014),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',1021),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',1028),
  ('object -> CONSTANT','object',1,'p_object_constant_0','queryParser.py',1035),
  ('object -> DOUBLECONST','object',1,'p_object_constant_1','queryParser.py',1047),
  ('object -> DECIMALCONST','object',1,'p_object_constant_2','queryParser.py',1059),
  ('object -> NUMBER','object',1,'p_object_constant_3','queryParser.py',1071),
]
