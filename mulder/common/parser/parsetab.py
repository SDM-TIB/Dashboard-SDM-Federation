
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CONSTANT NUMBER VARIABLE LKEY RKEY COLON POINT COMA URI ALL LPAR RPAR EQUALS NEQUALS LESS LESSEQ GREATER GREATEREQ ID NEG AND PLUS MINUS TIMES DIV DOUBLE INTEGER DECIMAL FLOAT STRING BOOLEAN DATETIME NONPOSINT NEGATIVEINT LONG INT SHORT BYTE NONNEGINT UNSIGNEDLONG UNSIGNEDINT UNSIGNEDSHORT UNSIGNEDBYTE POSITIVEINT OR UNION FILTER OPTIONAL SELECT DISTINCT WHERE PREFIX LIMIT OFFSET ORDER BY DESC ASC BOUND REGEX ISIRI ISURI ISBLANK ISLITERAL LANG DATATYPE SAMETERM LANGMATCHES STR UCASE LCASE CONTAINS UPPERCASE\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    '
    
_lr_action_items = {'PREFIX':([0,3,9,11,28,29,],[5,5,-6,-9,-7,-8,]),'SELECT':([0,2,3,4,8,9,11,28,29,],[-5,7,-5,-4,-3,-6,-9,-7,-8,]),'$end':([1,6,12,14,19,20,22,30,31,32,33,34,35,41,43,106,139,140,141,142,],[0,-5,-5,-11,-5,-5,-19,-1,-21,-2,-19,-18,-20,-10,-15,-22,-23,-14,-16,-17,]),'ID':([5,11,18,24,28,29,36,37,41,43,78,79,82,83,84,87,88,89,90,91,92,94,95,96,102,103,105,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,210,214,216,217,218,220,225,227,228,229,230,231,236,238,239,240,242,],[10,-9,28,-5,-7,-8,74,-12,-13,-15,10,10,74,101,10,-5,-31,-32,10,-42,128,136,-127,-128,10,-31,10,10,-33,10,-36,10,-37,10,10,128,-44,-51,128,-55,-56,-57,-58,128,-74,-75,10,10,-124,-125,-126,-14,-16,-17,10,10,-31,-30,10,10,10,10,-39,-5,10,10,128,128,128,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,128,-54,128,128,128,-66,128,216,-123,-129,-130,-131,-30,-35,-5,10,10,-41,-38,-31,-46,-43,-52,128,-76,-77,-68,-51,-50,128,-67,-59,128,-7,-45,-41,10,-53,128,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'URI':([5,11,18,24,28,29,36,37,41,43,78,79,82,83,84,87,88,89,90,91,92,94,95,96,102,103,105,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,210,214,216,217,218,220,225,227,228,229,230,231,236,238,239,240,242,],[11,-9,29,-5,-7,-8,11,-12,-13,-15,11,11,11,29,11,-5,-31,-32,11,-42,11,11,-127,-128,11,-31,11,11,-33,11,-36,11,-37,11,11,11,-44,-51,11,-55,-56,-57,-58,11,-74,-75,11,11,-124,-125,-126,-14,-16,-17,11,11,-31,-30,11,11,11,11,-39,-5,11,11,11,11,11,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,11,-54,11,11,11,-66,11,29,-123,-129,-130,-131,-30,-35,-5,11,11,-41,-38,-31,-46,-43,-52,11,-76,-77,-68,-51,-50,11,-67,-59,11,-7,-45,-41,11,-53,11,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'ORDER':([6,106,139,],[13,-22,-23,]),'LIMIT':([6,12,14,20,22,35,41,43,106,139,140,141,142,],[-5,21,-11,21,-21,-20,-10,-15,-22,-23,-14,-16,-17,]),'OFFSET':([6,12,14,19,22,34,41,43,106,139,140,141,142,],[-5,23,-11,23,-19,-18,-10,-15,-22,-23,-14,-16,-17,]),'DISTINCT':([7,],[16,]),'ALL':([7,15,16,17,],[-5,26,-24,-25,]),'VARIABLE':([7,11,15,16,17,24,25,27,28,29,36,37,39,41,43,78,79,80,81,82,84,87,88,89,90,91,92,94,95,96,102,103,105,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,210,214,216,217,218,220,225,227,228,229,230,231,236,238,239,240,242,],[-5,-9,27,-24,-25,-5,39,-122,-7,-8,43,-12,-121,-13,-15,96,96,98,99,43,96,-5,-31,-32,96,-42,121,138,-127,-128,96,-31,96,96,-33,96,-36,96,-37,96,96,121,-44,-51,121,-55,-56,-57,-58,121,-74,-75,96,185,-124,-125,-126,-14,-16,-17,96,96,-31,-30,96,96,96,96,-39,-5,96,96,121,121,121,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,121,-54,121,121,121,-66,121,-123,-129,-130,-131,-30,-35,-5,96,96,-41,-38,-31,-46,-43,-52,121,-76,-77,-68,-51,-50,121,-67,-59,121,-7,-45,-41,96,-53,121,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'COLON':([10,74,128,136,],[18,83,181,18,]),'LPAR':([11,29,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,92,101,116,119,120,122,124,125,126,127,129,130,131,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,216,227,],[-9,-8,80,81,82,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-118,-119,-120,116,-7,157,173,-118,-87,176,177,178,180,-85,-86,-88,-74,-75,157,207,180,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,157,180,180,180,180,157,-76,-77,207,180,-7,180,]),'EQUALS':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,163,-55,-56,-57,-58,163,163,-68,163,163,-59,163,163,163,163,-7,-65,163,163,-60,-61,-64,-62,]),'LESS':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,164,-55,-56,-57,-58,164,164,-68,164,164,-59,164,164,164,164,-7,-65,164,164,-60,-61,-64,-62,]),'LESSEQ':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,165,-55,-56,-57,-58,165,165,-68,165,165,-59,165,165,165,165,-7,-65,165,165,-60,-61,-64,-62,]),'GREATER':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,166,-55,-56,-57,-58,166,166,-68,166,166,-59,166,166,166,166,-7,-65,166,166,-60,-61,-64,-62,]),'GREATEREQ':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,167,-55,-56,-57,-58,167,167,-68,167,167,-59,167,167,167,167,-7,-65,167,167,-60,-61,-64,-62,]),'NEQUALS':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,168,-55,-56,-57,-58,168,168,-68,168,168,-59,168,168,168,168,-7,-65,168,168,-60,-61,-64,-62,]),'PLUS':([11,29,92,116,118,119,120,121,122,123,127,132,133,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,201,202,203,204,205,207,208,210,211,212,213,214,215,216,227,228,229,235,238,239,240,242,],[-9,-8,132,132,169,132,-55,-56,-57,-58,132,-74,-75,132,169,132,132,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,132,132,132,132,169,132,132,-76,-77,-68,169,132,169,-59,169,169,169,132,169,-7,132,-65,169,169,-60,-61,-64,-62,]),'MINUS':([11,29,92,116,118,119,120,121,122,123,127,132,133,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,179,180,201,202,203,204,205,207,208,210,211,212,213,214,215,216,227,228,229,235,238,239,240,242,],[-9,-8,133,133,170,133,-55,-56,-57,-58,133,-74,-75,133,170,133,133,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,133,133,133,133,170,133,133,-76,-77,-68,170,133,170,-59,170,170,170,133,170,-7,133,-65,170,170,-60,-61,-64,-62,]),'TIMES':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,171,-55,-56,-57,-58,171,171,-68,171,171,-59,171,171,171,171,-7,-65,171,171,-60,-61,-64,-62,]),'DIV':([11,29,118,120,121,122,123,160,179,204,205,208,210,211,212,213,215,216,228,229,235,238,239,240,242,],[-9,-8,172,-55,-56,-57,-58,172,172,-68,172,172,-59,172,172,172,172,-7,-65,172,172,-60,-61,-64,-62,]),'UNION':([11,28,29,78,79,84,87,88,89,90,91,102,103,105,108,110,111,113,117,118,120,121,122,123,134,143,144,145,146,147,152,153,154,155,174,179,183,184,185,186,187,188,189,191,192,194,195,196,197,199,200,204,205,206,208,210,216,217,218,225,228,229,230,231,232,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,109,-31,-32,112,-42,-5,-31,148,-33,112,-36,-37,-44,-51,-55,-56,-57,-58,-5,-5,148,-31,-30,-5,-39,193,112,-5,-54,-66,-123,-129,-130,-131,-30,-35,193,-5,109,-41,-38,-31,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,-41,-53,-65,-69,-40,109,109,-34,-60,-61,-64,-62,]),'POINT':([11,28,29,78,79,84,87,88,89,90,91,102,103,105,107,108,110,111,113,117,118,120,121,122,123,134,143,144,145,146,147,152,153,154,155,174,179,183,184,185,186,187,188,189,191,194,195,196,197,199,200,204,205,206,208,210,216,217,218,225,228,229,230,231,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,-5,-31,-32,114,-42,-5,-31,114,150,-33,114,-36,-37,-44,-51,-55,-56,-57,175,-5,-5,114,-31,-30,114,-39,-5,114,-5,-54,-66,-123,-129,-130,-131,-30,-35,-5,-5,-41,-38,-31,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,-41,-53,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'LKEY':([11,28,29,38,40,78,79,84,87,88,89,90,91,93,102,103,105,107,108,109,110,111,112,113,114,115,117,118,120,121,122,123,134,143,144,145,146,147,148,150,151,152,153,154,155,174,179,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,204,205,206,208,210,216,217,218,220,225,228,229,230,231,236,238,239,240,242,],[-9,-7,-8,78,79,84,84,102,-5,-31,-32,115,-42,134,143,-31,115,84,-33,151,115,-36,115,-37,115,155,-44,-51,-55,-56,-57,-58,84,143,115,-31,-30,115,115,84,191,-39,-5,115,143,-54,-66,-123,-129,-130,-131,-30,-35,-5,143,220,-41,-38,-31,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,-41,191,-53,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'FILTER':([11,28,29,78,79,84,87,88,89,90,91,102,103,105,107,108,110,111,112,113,114,115,117,118,120,121,122,123,134,143,144,145,146,147,148,150,151,152,153,154,155,174,179,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,204,205,206,208,210,216,217,218,220,225,228,229,230,231,236,238,239,240,242,],[-9,-7,-8,92,92,92,-5,-31,-32,92,-42,92,-31,92,92,-33,92,-36,92,-37,92,92,-44,-51,-55,-56,-57,-58,92,92,92,-31,-30,92,92,92,92,-39,-5,92,92,-54,-66,-123,-129,-130,-131,-30,-35,-5,92,92,-41,-38,-31,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,-41,92,-53,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'OPTIONAL':([11,28,29,78,79,84,87,88,89,90,91,102,103,105,107,108,110,111,112,113,114,115,117,118,120,121,122,123,134,143,144,145,146,147,148,150,151,152,153,154,155,174,179,183,184,185,186,187,188,189,191,193,194,195,196,197,199,200,204,205,206,208,210,216,217,218,220,225,228,229,230,231,236,238,239,240,242,],[-9,-7,-8,93,93,93,-5,-31,-32,93,-42,93,-31,93,93,-33,93,-36,93,-37,93,93,-44,-51,-55,-56,-57,-58,93,93,93,-31,-30,93,93,93,93,-39,-5,93,93,-54,-66,-123,-129,-130,-131,-30,-35,-5,93,93,-41,-38,-31,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,-41,93,-53,-65,-69,-40,-5,-34,-60,-61,-64,-62,]),'RKEY':([11,28,29,78,79,84,85,86,87,88,89,90,91,97,102,103,104,105,107,108,110,111,113,117,118,120,121,122,123,134,143,144,145,146,147,149,150,152,153,154,155,156,174,179,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,199,200,204,205,206,208,210,216,217,218,219,225,228,229,230,231,232,236,238,239,240,242,],[-9,-7,-8,-5,-5,-5,106,-26,-5,-31,-32,-5,-42,139,-5,146,147,-5,-5,-33,-5,-36,-37,-44,-51,-55,-56,-57,-58,-5,-5,-5,187,-30,-5,-28,-5,-39,-5,-5,-5,197,-54,-66,217,-123,-129,-130,-131,-30,-35,-5,-27,-5,-5,-41,-38,197,-46,-43,-52,-68,-51,-50,-67,-59,-7,-45,230,231,-53,-65,-69,-40,-5,197,-34,-60,-61,-64,-62,]),'CONSTANT':([11,28,29,92,116,119,127,132,133,135,136,137,138,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,226,227,237,],[-9,-7,-8,122,122,122,122,-74,-75,186,-124,-125,-126,122,122,122,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,122,122,122,122,122,122,-76,-77,122,122,234,122,234,]),'RPAR':([11,29,43,98,99,100,118,120,121,122,123,140,141,142,158,159,160,174,179,198,200,204,205,206,208,209,210,213,215,216,221,222,223,224,225,228,229,233,234,235,238,239,240,241,242,],[-9,-8,-15,140,141,142,-51,-55,-56,-57,-58,-14,-16,-17,199,200,204,-54,-66,221,-52,-68,-51,-50,-67,225,-59,228,204,-7,-49,-48,-47,200,-53,-65,-69,239,-63,240,-60,-61,-64,242,-62,]),'AND':([11,29,118,120,121,122,123,159,160,174,179,200,204,205,206,208,210,216,222,225,228,229,238,239,240,242,],[-9,-8,-51,-55,-56,-57,-58,202,-51,-54,-66,-52,-68,-51,-50,-67,-59,-7,202,-53,-65,-69,-60,-61,-64,-62,]),'OR':([11,29,118,120,121,122,123,159,160,174,179,200,204,205,206,208,210,216,222,225,228,229,238,239,240,242,],[-9,-8,-51,-55,-56,-57,-58,203,-51,-54,-66,-52,-68,-51,-50,-67,-59,-7,203,-53,-65,-69,-60,-61,-64,-62,]),'COMA':([11,29,120,121,122,123,179,204,208,210,211,212,216,228,229,233,234,238,239,240,242,],[-9,-8,-55,-56,-57,-58,-66,-68,-67,-59,226,227,-7,-65,-69,237,-63,-60,-61,-64,-62,]),'BY':([13,],[24,]),'NUMBER':([21,23,92,116,119,127,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,201,202,203,207,214,227,],[34,35,123,123,123,123,-74,-75,123,123,123,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,123,210,123,123,123,123,123,-76,-77,123,123,123,]),'DESC':([24,36,37,41,43,82,140,141,142,],[-5,42,-12,-13,-15,42,-14,-16,-17,]),'ASC':([24,36,37,41,43,82,140,141,142,],[-5,44,-12,-13,-15,44,-14,-16,-17,]),'BOUND':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,46,-12,-13,-15,46,46,46,46,46,-74,-75,-14,-16,-17,46,46,46,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,46,46,46,46,46,46,-76,-77,46,46,46,]),'ISIRI':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,47,-12,-13,-15,47,47,47,47,47,-74,-75,-14,-16,-17,47,47,47,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,47,47,47,47,47,47,-76,-77,47,47,47,]),'ISURI':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,48,-12,-13,-15,48,48,48,48,48,-74,-75,-14,-16,-17,48,48,48,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,48,48,48,48,48,48,-76,-77,48,48,48,]),'ISBLANK':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,49,-12,-13,-15,49,49,49,49,49,-74,-75,-14,-16,-17,49,49,49,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,49,49,49,49,49,49,-76,-77,49,49,49,]),'ISLITERAL':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,50,-12,-13,-15,50,50,50,50,50,-74,-75,-14,-16,-17,50,50,50,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,50,50,50,50,50,50,-76,-77,50,50,50,]),'LANG':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,51,-12,-13,-15,51,51,51,51,51,-74,-75,-14,-16,-17,51,51,51,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,51,51,51,51,51,51,-76,-77,51,51,51,]),'DATATYPE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,52,-12,-13,-15,52,52,52,52,52,-74,-75,-14,-16,-17,52,52,52,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,52,52,52,52,52,52,-76,-77,52,52,52,]),'STR':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,53,-12,-13,-15,53,53,53,53,53,-74,-75,-14,-16,-17,53,53,53,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,53,53,53,53,53,53,-76,-77,53,53,53,]),'UPPERCASE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,54,-12,-13,-15,54,54,54,54,54,-74,-75,-14,-16,-17,54,54,54,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,54,54,54,54,54,54,-76,-77,54,54,54,]),'DOUBLE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,55,-12,-13,-15,55,55,55,55,55,-74,-75,-14,-16,-17,55,55,55,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,55,55,55,55,55,55,-76,-77,55,55,55,]),'INTEGER':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,56,-12,-13,-15,56,56,56,56,56,-74,-75,-14,-16,-17,56,56,56,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,56,56,56,56,56,56,-76,-77,56,56,56,]),'DECIMAL':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,57,-12,-13,-15,57,57,57,57,57,-74,-75,-14,-16,-17,57,57,57,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,57,57,57,57,57,57,-76,-77,57,57,57,]),'FLOAT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,58,-12,-13,-15,58,58,58,58,58,-74,-75,-14,-16,-17,58,58,58,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,58,58,58,58,58,58,-76,-77,58,58,58,]),'STRING':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,59,-12,-13,-15,59,59,59,59,59,-74,-75,-14,-16,-17,59,59,59,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,59,59,59,59,59,59,-76,-77,59,59,59,]),'BOOLEAN':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,60,-12,-13,-15,60,60,60,60,60,-74,-75,-14,-16,-17,60,60,60,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,60,60,60,60,60,60,-76,-77,60,60,60,]),'DATETIME':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,61,-12,-13,-15,61,61,61,61,61,-74,-75,-14,-16,-17,61,61,61,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,61,61,61,61,61,61,-76,-77,61,61,61,]),'NONPOSINT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,62,-12,-13,-15,62,62,62,62,62,-74,-75,-14,-16,-17,62,62,62,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,62,62,62,62,62,62,-76,-77,62,62,62,]),'NEGATIVEINT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,63,-12,-13,-15,63,63,63,63,63,-74,-75,-14,-16,-17,63,63,63,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,63,63,63,63,63,63,-76,-77,63,63,63,]),'LONG':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,64,-12,-13,-15,64,64,64,64,64,-74,-75,-14,-16,-17,64,64,64,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,64,64,64,64,64,64,-76,-77,64,64,64,]),'INT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,65,-12,-13,-15,65,65,65,65,65,-74,-75,-14,-16,-17,65,65,65,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,65,65,65,65,65,65,-76,-77,65,65,65,]),'SHORT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,66,-12,-13,-15,66,66,66,66,66,-74,-75,-14,-16,-17,66,66,66,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,66,66,66,66,66,66,-76,-77,66,66,66,]),'BYTE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,67,-12,-13,-15,67,67,67,67,67,-74,-75,-14,-16,-17,67,67,67,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,67,67,67,67,67,67,-76,-77,67,67,67,]),'NONNEGINT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,68,-12,-13,-15,68,68,68,68,68,-74,-75,-14,-16,-17,68,68,68,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,68,68,68,68,68,68,-76,-77,68,68,68,]),'UNSIGNEDLONG':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,69,-12,-13,-15,69,69,69,69,69,-74,-75,-14,-16,-17,69,69,69,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,69,69,69,69,69,69,-76,-77,69,69,69,]),'UNSIGNEDINT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,70,-12,-13,-15,70,70,70,70,70,-74,-75,-14,-16,-17,70,70,70,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,70,70,70,70,70,70,-76,-77,70,70,70,]),'UNSIGNEDSHORT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,71,-12,-13,-15,71,71,71,71,71,-74,-75,-14,-16,-17,71,71,71,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,71,71,71,71,71,71,-76,-77,71,71,71,]),'UNSIGNEDBYTE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,72,-12,-13,-15,72,72,72,72,72,-74,-75,-14,-16,-17,72,72,72,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,72,72,72,72,72,72,-76,-77,72,72,72,]),'POSITIVEINT':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,73,-12,-13,-15,73,73,73,73,73,-74,-75,-14,-16,-17,73,73,73,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,73,73,73,73,73,73,-76,-77,73,73,73,]),'UCASE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,76,-12,-13,-15,76,76,76,76,76,-74,-75,-14,-16,-17,76,76,76,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,76,76,76,76,76,76,-76,-77,76,76,76,]),'LCASE':([24,36,37,41,43,82,92,116,119,127,132,133,140,141,142,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[-5,77,-12,-13,-15,77,77,77,77,77,-74,-75,-14,-16,-17,77,77,77,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,77,77,77,77,77,77,-76,-77,77,77,77,]),'WHERE':([25,26,27,39,],[38,40,-122,-121,]),'NEG':([92,116,119,157,161,163,164,165,166,167,168,173,201,202,203,207,],[119,119,119,119,119,-78,-79,-80,-81,-82,-83,119,119,-76,-77,119,]),'REGEX':([92,116,119,127,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[124,124,124,124,-74,-75,124,124,124,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,124,124,124,124,124,124,-76,-77,124,124,124,]),'SAMETERM':([92,116,119,127,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[129,129,129,129,-74,-75,129,129,129,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,129,129,129,129,129,129,-76,-77,129,129,129,]),'LANGMATCHES':([92,116,119,127,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[130,130,130,130,-74,-75,130,130,130,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,130,130,130,130,130,130,-76,-77,130,130,130,]),'CONTAINS':([92,116,119,127,132,133,157,161,162,163,164,165,166,167,168,169,170,171,172,173,176,177,178,180,201,202,203,207,214,227,],[131,131,131,131,-74,-75,131,131,131,-78,-79,-80,-81,-82,-83,-70,-71,-72,-73,131,131,131,131,131,131,-76,-77,131,131,131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse_sparql':([0,],[1,]),'prefix_list':([0,3,],[2,8,]),'prefix':([0,3,],[3,3,]),'empty':([0,3,6,7,12,19,20,24,78,79,84,87,90,102,105,107,110,134,143,144,147,150,153,154,155,189,191,192,231,232,],[4,4,14,17,22,31,33,37,89,89,89,108,113,89,113,89,113,89,89,113,113,89,108,113,89,108,89,108,108,108,]),'query':([2,],[6,]),'uri':([5,36,78,79,82,84,90,92,94,102,105,107,110,112,114,115,116,119,127,134,135,143,144,147,148,150,151,154,155,157,161,162,173,176,177,178,180,191,193,201,207,214,220,227,],[9,75,95,95,75,95,95,120,137,95,95,95,95,95,95,95,120,120,120,95,184,95,95,95,95,95,95,95,95,120,120,120,120,120,120,120,120,95,95,120,120,120,95,120,]),'order_by':([6,],[12,]),'distinct':([7,],[15,]),'limit':([12,20,],[19,32,]),'offset':([12,19,],[20,30,]),'var_list':([15,],[25,]),'var_order_list':([24,],[36,]),'desc_var':([36,82,],[41,100,]),'unary_func':([36,82,92,116,119,127,157,161,162,173,176,177,178,180,201,207,214,227,],[45,45,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'group_graph_pattern':([78,79,134,],[85,97,182,]),'union_block':([78,79,84,102,134,143,155,191,],[86,86,104,104,86,104,104,104,]),'pjoin_block':([78,79,84,102,107,134,143,150,155,191,],[87,87,87,87,149,87,87,190,87,87,]),'join_block':([78,79,84,102,107,115,134,143,150,151,155,191,220,],[88,88,103,145,88,156,88,145,88,192,196,196,232,]),'bgp':([78,79,84,90,102,105,107,110,112,114,115,134,143,144,147,148,150,151,154,155,191,193,220,],[90,90,105,110,144,110,90,110,153,154,144,90,144,110,110,189,90,90,110,144,144,153,105,]),'triple':([78,79,84,90,102,105,107,110,112,114,115,134,143,144,147,148,150,151,154,155,191,193,220,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'subject':([78,79,84,90,102,105,107,110,112,114,115,134,143,144,147,148,150,151,154,155,191,193,220,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'rest_union_block':([87,153,189,192,231,232,],[107,194,218,219,236,219,]),'rest_join_block':([90,105,110,144,147,154,],[111,111,152,111,188,195,]),'express_rel':([92,116,119,157,161,173,201,207,],[117,159,174,159,206,159,222,224,]),'express_arg':([92,116,119,127,157,161,162,173,176,177,178,180,201,207,214,227,],[118,160,118,179,160,205,208,160,211,212,213,215,118,160,229,235,]),'binary_func':([92,116,119,127,157,161,162,173,176,177,178,180,201,207,214,227,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'UNARYOP':([92,116,119,127,157,161,162,173,176,177,178,180,201,207,214,227,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'predicate':([94,],[135,]),'expression':([116,157,173,201,],[158,198,209,223,]),'RELOP':([118,160,179,205,208,211,212,213,215,229,235,],[161,161,214,161,214,214,214,214,214,214,214,]),'ARITOP':([118,160,179,205,208,211,212,213,215,229,235,],[162,162,162,162,162,162,162,162,162,162,162,]),'object':([135,],[183,]),'LOGOP':([159,222,],[201,201,]),'pattern_arg':([226,237,],[233,241,]),'regex_flag':([233,],[238,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','queryParser.py',162),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','queryParser.py',169),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',176),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',182),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',188),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',194),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',200),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',206),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',212),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',218),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',224),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',230),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',236),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',242),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',248),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',254),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',260),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',266),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',272),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',278),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',284),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',290),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',296),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',302),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',308),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',314),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',320),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',328),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',339),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',345),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',351),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',357),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',363),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',369),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',376),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',387),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',393),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',399),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',405),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',411),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',418),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',426),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',432),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',438),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',444),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',457),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',466),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',472),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',478),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',484),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',490),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',496),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',502),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',508),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',515),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',521),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',527),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',538),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',544),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',552),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',558),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',564),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',570),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',577),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',583),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',589),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',596),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',602),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',608),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',614),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',620),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',626),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',632),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',638),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',644),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',650),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',656),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',662),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',668),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',674),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',680),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',686),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',692),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',698),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',704),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',710),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',716),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',722),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',728),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',734),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',740),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',746),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',752),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',758),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',764),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',770),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',776),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',782),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',783),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',784),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',785),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',786),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',787),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',788),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',789),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',790),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',791),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',792),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',793),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',794),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',795),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',796),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',797),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',798),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',799),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',800),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',806),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',812),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',818),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',824),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',830),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',836),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',842),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',848),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',861),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',867),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',874),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',880),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',886),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',892),
  ('object -> CONSTANT','object',1,'p_object_constant','queryParser.py',898),
]
